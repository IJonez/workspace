
uart.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000000f2  00000186  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800062  00800062  00000188  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	47 c0       	rjmp	.+142    	; 0xa8 <__vector_12>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>

00000026 <daten>:
  26:	48 65 6c 6c 6f 20 57 6f 72 6c 64 21 0a 00           Hello World!..

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf e5       	ldi	r28, 0x5F	; 95
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	10 e0       	ldi	r17, 0x00	; 0
  42:	a0 e6       	ldi	r26, 0x60	; 96
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	e2 ef       	ldi	r30, 0xF2	; 242
  48:	f0 e0       	ldi	r31, 0x00	; 0
  4a:	02 c0       	rjmp	.+4      	; 0x50 <.do_copy_data_start>

0000004c <.do_copy_data_loop>:
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0

00000050 <.do_copy_data_start>:
  50:	a2 36       	cpi	r26, 0x62	; 98
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <.do_copy_data_loop>

00000056 <__do_clear_bss>:
  56:	10 e0       	ldi	r17, 0x00	; 0
  58:	a2 e6       	ldi	r26, 0x62	; 98
  5a:	b0 e0       	ldi	r27, 0x00	; 0
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a4 36       	cpi	r26, 0x64	; 100
  62:	b1 07       	cpc	r27, r17
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	0a d0       	rcall	.+20     	; 0x7c <main>
  68:	42 c0       	rjmp	.+132    	; 0xee <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <uart_init>:
  6c:	10 bc       	out	0x20, r1	; 32
  6e:	89 e1       	ldi	r24, 0x19	; 25
  70:	89 b9       	out	0x09, r24	; 9
  72:	88 e1       	ldi	r24, 0x18	; 24
  74:	8a b9       	out	0x0a, r24	; 10
  76:	86 e8       	ldi	r24, 0x86	; 134
  78:	80 bd       	out	0x20, r24	; 32
  7a:	08 95       	ret

0000007c <main>:
  7c:	10 bc       	out	0x20, r1	; 32
  7e:	89 e1       	ldi	r24, 0x19	; 25
  80:	89 b9       	out	0x09, r24	; 9
  82:	88 e1       	ldi	r24, 0x18	; 24
  84:	8a b9       	out	0x0a, r24	; 10
  86:	86 e8       	ldi	r24, 0x86	; 134
  88:	80 bd       	out	0x20, r24	; 32
  8a:	78 94       	sei
  8c:	26 e2       	ldi	r18, 0x26	; 38
  8e:	30 e0       	ldi	r19, 0x00	; 0
  90:	80 91 60 00 	lds	r24, 0x0060
  94:	88 23       	and	r24, r24
  96:	e1 f3       	breq	.-8      	; 0x90 <main+0x14>
  98:	10 92 60 00 	sts	0x0060, r1
  9c:	30 93 63 00 	sts	0x0063, r19
  a0:	20 93 62 00 	sts	0x0062, r18
  a4:	55 9a       	sbi	0x0a, 5	; 10
  a6:	f4 cf       	rjmp	.-24     	; 0x90 <main+0x14>

000000a8 <__vector_12>:
  a8:	1f 92       	push	r1
  aa:	0f 92       	push	r0
  ac:	0f b6       	in	r0, 0x3f	; 63
  ae:	0f 92       	push	r0
  b0:	11 24       	eor	r1, r1
  b2:	8f 93       	push	r24
  b4:	ef 93       	push	r30
  b6:	ff 93       	push	r31
  b8:	e0 91 62 00 	lds	r30, 0x0062
  bc:	f0 91 63 00 	lds	r31, 0x0063
  c0:	31 96       	adiw	r30, 0x01	; 1
  c2:	f0 93 63 00 	sts	0x0063, r31
  c6:	e0 93 62 00 	sts	0x0062, r30
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	84 91       	lpm	r24, Z+
  ce:	88 23       	and	r24, r24
  d0:	11 f0       	breq	.+4      	; 0xd6 <__vector_12+0x2e>
  d2:	8c b9       	out	0x0c, r24	; 12
  d4:	04 c0       	rjmp	.+8      	; 0xde <__vector_12+0x36>
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	80 93 60 00 	sts	0x0060, r24
  dc:	55 98       	cbi	0x0a, 5	; 10
  de:	ff 91       	pop	r31
  e0:	ef 91       	pop	r30
  e2:	8f 91       	pop	r24
  e4:	0f 90       	pop	r0
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	0f 90       	pop	r0
  ea:	1f 90       	pop	r1
  ec:	18 95       	reti

000000ee <_exit>:
  ee:	f8 94       	cli

000000f0 <__stop_program>:
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <__stop_program>
